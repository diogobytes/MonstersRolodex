{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","name","CardList","console","log","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"6TAEaA,EAAO,SAACC,GAAD,OAEhB,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,4BACR,mCAAMJ,EAAMG,QAAQE,YCWTC,G,MAbS,SAACN,GAGrB,OADAO,QAAQC,IAAIR,GAER,qBAAKC,UAAU,YAAf,SACCD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OACxB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCGfO,G,YAVU,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACAZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCmCCG,E,kDApCb,aAAc,IAAD,8BACX,gBAOFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAACC,YAAcF,EAAEG,OAAOC,SAPtC,EAAKC,MAAQ,CACXb,SAAW,GACXU,YAAa,IAJJ,E,qDAWb,WAAqB,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,SAAUkB,S,oBAG1C,WAAS,IAAD,EAE4BC,KAAKN,MAA/Bb,EAFF,EAEEA,SAAUU,EAFZ,EAEYA,YACZU,EAAmBpB,EAASqB,QAAO,SAAA3B,GAAO,OAC9CA,EAAQE,KAAK0B,cAAcC,SAASb,EAAYY,kBAGlD,OACA,sBAAK9B,UAAU,MAAf,UACA,kDACA,cAAC,EAAD,CAAWW,YAAY,qBAAqBC,aAAce,KAAKf,eAC/D,cAAC,EAAD,CAAUJ,SAAYoB,W,GA9BRI,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.c4f0a1cf.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './card.styles.css'\r\nexport const Card = (props) => (\r\n\r\n    <div className=\"card-container\">\r\n    <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n    <h2> {props.monster.name}</h2> \r\n    </div>\r\n)","import React from 'react';\r\nimport {Card} from '../card/card.component';\r\nimport './card-list.styles.css'\r\n\r\nexport const CardList = (props) => {\r\n\r\n    console.log(props)\r\n    return (\r\n        <div className=\"card-list\">\r\n        {props.monsters.map(monster => (\r\n           <Card key={monster.id} monster={monster}/>\r\n          ))}\r\n        </div>\r\n    );\r\n} \r\n\r\n\r\nexport default CardList;","import React from \"react\";\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n    <input \r\n    className='search'\r\n    type='search' \r\n    placeholder={placeholder}\r\n    onChange={handleChange}\r\n    />\r\n)\r\n\r\n\r\nexport default SearchBox;","import React from 'react';\nimport CardList from './components/card-list/card-list.component.jsx'\nimport './App.css';\nimport SearchBox from './components/search-box/search-box.component.jsx';\n\nclass App extends React.Component{\n\n  constructor(){\n    super();\n    this.state = {\n      monsters : [],\n      searchField: ''\n    }\n    \n  }\n  handleChange = (e) => {\n    this.setState({searchField : e.target.value});\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters: users}))\n  }\n\n  render(){\n\n    const { monsters, searchField}  = this.state; \n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n      )\n    \n    return (  \n    <div className=\"App\">\n    <h1>Monsters Rolodex</h1>\n    <SearchBox placeholder='Search for Monster' handleChange={this.handleChange} />\n    <CardList monsters = {filteredMonsters} >\n\n    </CardList>\n  \n  </div>\n  );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}